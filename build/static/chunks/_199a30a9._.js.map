{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/polargrid-magicui/polargrid/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/polargrid-magicui/polargrid/components/magicui/animated-list.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport React, {\n  ComponentPropsWithoutRef,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport function AnimatedListItem({ children }: { children: React.ReactNode }) {\n  const animations = {\n    initial: { scale: 0, opacity: 0 },\n    animate: { scale: 1, opacity: 1, originY: 0 },\n    exit: { scale: 0, opacity: 0 },\n    transition: { type: \"spring\", stiffness: 350, damping: 40 },\n  };\n\n  return (\n    <motion.div {...animations} layout className=\"mx-auto w-full\">\n      {children}\n    </motion.div>\n  );\n}\n\nexport interface AnimatedListProps extends ComponentPropsWithoutRef<\"div\"> {\n  children: React.ReactNode;\n  delay?: number;\n}\n\nexport const AnimatedList = React.memo(\n  ({ children, className, delay = 1000, ...props }: AnimatedListProps) => {\n    const [index, setIndex] = useState(0);\n    const childrenArray = useMemo(\n      () => React.Children.toArray(children),\n      [children],\n    );\n\n    useEffect(() => {\n      if (index < childrenArray.length - 1) {\n        const timeout = setTimeout(() => {\n          setIndex((prevIndex) => (prevIndex + 1) % childrenArray.length);\n        }, delay);\n\n        return () => clearTimeout(timeout);\n      }\n    }, [index, delay, childrenArray.length]);\n\n    const itemsToShow = useMemo(() => {\n      const result = childrenArray.slice(0, index + 1).reverse();\n      return result;\n    }, [index, childrenArray]);\n\n    return (\n      <div\n        className={cn(`flex flex-col items-center gap-4`, className)}\n        {...props}\n      >\n        <AnimatePresence>\n          {itemsToShow.map((item) => (\n            <AnimatedListItem key={(item as React.ReactElement).key}>\n              {item}\n            </AnimatedListItem>\n          ))}\n        </AnimatePresence>\n      </div>\n    );\n  },\n);\n\nAnimatedList.displayName = \"AnimatedList\";\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAWO,SAAS,iBAAiB,EAAE,QAAQ,EAAiC;IAC1E,MAAM,aAAa;QACjB,SAAS;YAAE,OAAO;YAAG,SAAS;QAAE;QAChC,SAAS;YAAE,OAAO;YAAG,SAAS;YAAG,SAAS;QAAE;QAC5C,MAAM;YAAE,OAAO;YAAG,SAAS;QAAE;QAC7B,YAAY;YAAE,MAAM;YAAU,WAAW;YAAK,SAAS;QAAG;IAC5D;IAEA,qBACE,6LAAC,qNAAA,CAAA,SAAM,CAAC,GAAG;QAAE,GAAG,UAAU;QAAE,MAAM;QAAC,WAAU;kBAC1C;;;;;;AAGP;KAbgB;AAoBT,MAAM,6BAAe,GAAA,6JAAA,CAAA,UAAK,CAAC,IAAI,UACpC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,IAAI,EAAE,GAAG,OAA0B;;IACjE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+CAC1B,IAAM,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;8CAC7B;QAAC;KAAS;IAGZ,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,QAAQ,cAAc,MAAM,GAAG,GAAG;gBACpC,MAAM,UAAU;sDAAW;wBACzB;8DAAS,CAAC,YAAc,CAAC,YAAY,CAAC,IAAI,cAAc,MAAM;;oBAChE;qDAAG;gBAEH;8CAAO,IAAM,aAAa;;YAC5B;QACF;iCAAG;QAAC;QAAO;QAAO,cAAc,MAAM;KAAC;IAEvC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;6CAAE;YAC1B,MAAM,SAAS,cAAc,KAAK,CAAC,GAAG,QAAQ,GAAG,OAAO;YACxD,OAAO;QACT;4CAAG;QAAC;QAAO;KAAc;IAEzB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,CAAC,gCAAgC,CAAC,EAAE;QACjD,GAAG,KAAK;kBAET,cAAA,6LAAC,oNAAA,CAAA,kBAAe;sBACb,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;8BACE;mBADoB,AAAC,KAA4B,GAAG;;;;;;;;;;;;;;;AAOjE;;AAGF,aAAa,WAAW,GAAG","debugId":null}}]
}