{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/polargrid-magicui/polargrid/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/polargrid-magicui/polargrid/components/magicui/animated-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AnimatedList = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnimatedList() from the server but AnimatedList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/magicui/animated-list.tsx <module evaluation>\",\n    \"AnimatedList\",\n);\nexport const AnimatedListItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnimatedListItem() from the server but AnimatedListItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/magicui/animated-list.tsx <module evaluation>\",\n    \"AnimatedListItem\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sEACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sEACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/polargrid-magicui/polargrid/components/magicui/animated-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AnimatedList = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnimatedList() from the server but AnimatedList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/magicui/animated-list.tsx\",\n    \"AnimatedList\",\n);\nexport const AnimatedListItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnimatedListItem() from the server but AnimatedListItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/magicui/animated-list.tsx\",\n    \"AnimatedListItem\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kDACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kDACA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/polargrid-magicui/polargrid/app/animated-list/page.tsx"],"sourcesContent":["// app/animated-list/page.tsx\nimport { Metadata } from 'next'\nimport { cn } from \"@/lib/utils\";\nimport { AnimatedList } from \"@/components/magicui/animated-list\";\n\ninterface Item {\n  name: string;\n  description: string;\n  icon: string;\n  color: string;\n  time: string;\n}\n\nexport const metadata: Metadata = {\n  title: 'Animated List',\n  description: 'A Next.js page demonstrating an animated list',\n}\n\nlet notifications = [\n  {\n    name: \"Payment received\",\n    description: \"Magic UI\",\n    time: \"15m ago\",\n \n    icon: \"💸\",\n    color: \"#00C9A7\",\n  },\n  {\n    name: \"User signed up\",\n    description: \"Magic UI\",\n    time: \"10m ago\",\n    icon: \"👤\",\n    color: \"#FFB800\",\n  },\n  {\n    name: \"New message\",\n    description: \"Magic UI\",\n    time: \"5m ago\",\n    icon: \"💬\",\n    color: \"#FF3D71\",\n  },\n  {\n    name: \"New event\",\n    description: \"Magic UI\",\n    time: \"2m ago\",\n    icon: \"🗞️\",\n    color: \"#1E86FF\",\n  },\n];\n \nnotifications = Array.from({ length: 10 }, () => notifications).flat();\n \nconst Notification = ({ name, description, icon, color, time }: Item) => {\n  return (\n    <figure\n      className={cn(\n        \"relative mx-auto min-h-fit w-full cursor-pointer overflow-hidden rounded-2xl p-4\",\n        // animation styles\n        \"transition-all duration-200 ease-in-out hover:scale-[103%]\",\n        // light styles\n        \"bg-white [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)]\",\n        // dark styles\n        \"transform-gpu dark:bg-transparent dark:backdrop-blur-md dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]\",\n      )}\n    >\n      <div className=\"flex flex-row items-center gap-3\">\n        <div\n          className=\"flex size-10 items-center justify-center rounded-2xl\"\n          style={{\n            backgroundColor: color,\n          }}\n        >\n          <span className=\"text-lg\">{icon}</span>\n        </div>\n        <div className=\"flex flex-col overflow-hidden\">\n          <figcaption className=\"flex flex-row items-center whitespace-pre text-lg font-medium dark:text-white \">\n            <span className=\"text-sm sm:text-lg\">{name}</span>\n            <span className=\"mx-1\">·</span>\n            <span className=\"text-xs text-gray-500\">{time}</span>\n          </figcaption>\n          <p className=\"text-sm font-normal dark:text-white/60\">\n            {description}\n          </p>\n        </div>\n      </div>\n    </figure>\n  );\n};\n\nexport default function AnimatedListPage() {\n  return (\n    <div className=\"relative flex h-[500px] w-full flex-col overflow-hidden p-2\">\n      <AnimatedList>\n        {notifications.map((item, idx) => (\n          <Notification {...item} key={idx} />\n        ))}\n      </AnimatedList>\n \n      <div className=\"pointer-events-none absolute inset-x-0 bottom-0 h-1/4 bg-gradient-to-t from-background\"></div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;AAE7B;AACA;;;;;AAUO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEA,IAAI,gBAAgB;IAClB;QACE,MAAM;QACN,aAAa;QACb,MAAM;QAEN,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;QACN,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;QACN,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,aAAa;QACb,MAAM;QACN,MAAM;QACN,OAAO;IACT;CACD;AAED,gBAAgB,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAG,IAAM,eAAe,IAAI;AAEpE,MAAM,eAAe,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAQ;IAClE,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oFACA,mBAAmB;QACnB,8DACA,eAAe;QACf,yGACA,cAAc;QACd;kBAGF,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBACC,WAAU;oBACV,OAAO;wBACL,iBAAiB;oBACnB;8BAEA,cAAA,8OAAC;wBAAK,WAAU;kCAAW;;;;;;;;;;;8BAE7B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAW,WAAU;;8CACpB,8OAAC;oCAAK,WAAU;8CAAsB;;;;;;8CACtC,8OAAC;oCAAK,WAAU;8CAAO;;;;;;8CACvB,8OAAC;oCAAK,WAAU;8CAAyB;;;;;;;;;;;;sCAE3C,8OAAC;4BAAE,WAAU;sCACV;;;;;;;;;;;;;;;;;;;;;;;AAMb;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,0IAAA,CAAA,eAAY;0BACV,cAAc,GAAG,CAAC,CAAC,MAAM,oBACxB,4NAAC;wBAAc,GAAG,IAAI;wBAAE,KAAK;;;;;;;;;;;;;0BAIjC,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB","debugId":null}}]
}